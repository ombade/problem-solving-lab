{"ast":null,"code":"import React from'react';import{Array1DRenderer,Renderer}from'core/renderers';import styles from'./Array2DRenderer.module.scss';import{classes}from'common/util';class Array2DRenderer extends Renderer{constructor(props){super(props);this.togglePan(true);this.toggleZoom(true);}renderData(){const{data}=this.props.data;const isArray1D=this instanceof Array1DRenderer;let longestRow=data.reduce((longestRow,row)=>longestRow.length<row.length?row:longestRow,[]);return/*#__PURE__*/React.createElement(\"table\",{className:styles.array_2d,style:{marginLeft:-this.centerX*2,marginTop:-this.centerY*2,transform:\"scale(\".concat(this.zoom,\")\")}},/*#__PURE__*/React.createElement(\"tbody\",null,/*#__PURE__*/React.createElement(\"tr\",{className:styles.row},!isArray1D&&/*#__PURE__*/React.createElement(\"td\",{className:classes(styles.col,styles.index)}),longestRow.map((_,i)=>/*#__PURE__*/React.createElement(\"td\",{className:classes(styles.col,styles.index),key:i},/*#__PURE__*/React.createElement(\"span\",{className:styles.value},i)))),data.map((row,i)=>/*#__PURE__*/React.createElement(\"tr\",{className:styles.row,key:i},!isArray1D&&/*#__PURE__*/React.createElement(\"td\",{className:classes(styles.col,styles.index)},/*#__PURE__*/React.createElement(\"span\",{className:styles.value},i)),row.map((col,j)=>/*#__PURE__*/React.createElement(\"td\",{className:classes(styles.col,col.selected&&styles.selected,col.patched&&styles.patched),key:j},/*#__PURE__*/React.createElement(\"span\",{className:styles.value},this.toString(col.value))))))));}}export default Array2DRenderer;","map":{"version":3,"names":["React","Array1DRenderer","Renderer","styles","classes","Array2DRenderer","constructor","props","togglePan","toggleZoom","renderData","data","isArray1D","longestRow","reduce","row","length","createElement","className","array_2d","style","marginLeft","centerX","marginTop","centerY","transform","concat","zoom","col","index","map","_","i","key","value","j","selected","patched","toString"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/core/renderers/Array2DRenderer/index.js"],"sourcesContent":["import React from 'react';\nimport { Array1DRenderer, Renderer } from 'core/renderers';\nimport styles from './Array2DRenderer.module.scss';\nimport { classes } from 'common/util';\n\nclass Array2DRenderer extends Renderer {\n  constructor(props) {\n    super(props);\n\n    this.togglePan(true);\n    this.toggleZoom(true);\n  }\n\n  renderData() {\n    const { data } = this.props.data;\n\n    const isArray1D = this instanceof Array1DRenderer;\n    let longestRow = data.reduce((longestRow, row) => longestRow.length < row.length ? row : longestRow, []);\n\n    return (\n      <table className={styles.array_2d}\n             style={{ marginLeft: -this.centerX * 2, marginTop: -this.centerY * 2, transform: `scale(${this.zoom})` }}>\n        <tbody>\n        <tr className={styles.row}>\n          {\n            !isArray1D &&\n            <td className={classes(styles.col, styles.index)} />\n          }\n          {\n            longestRow.map((_, i) => (\n              <td className={classes(styles.col, styles.index)} key={i}>\n                <span className={styles.value}>{i}</span>\n              </td>\n            ))\n          }\n        </tr>\n        {\n          data.map((row, i) => (\n            <tr className={styles.row} key={i}>\n              {\n                !isArray1D &&\n                <td className={classes(styles.col, styles.index)}>\n                  <span className={styles.value}>{i}</span>\n                </td>\n              }\n              {\n                row.map((col, j) => (\n                  <td className={classes(styles.col, col.selected && styles.selected, col.patched && styles.patched)}\n                      key={j}>\n                    <span className={styles.value}>{this.toString(col.value)}</span>\n                  </td>\n                ))\n              }\n            </tr>\n          ))\n        }\n        </tbody>\n      </table>\n    );\n  }\n}\n\nexport default Array2DRenderer;\n\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,KAAM,OAAO,CACzB,OAASC,eAAe,CAAEC,QAAQ,KAAQ,gBAAgB,CAC1D,MAAO,CAAAC,MAAM,KAAM,+BAA+B,CAClD,OAASC,OAAO,KAAQ,aAAa,CAErC,KAAM,CAAAC,eAAe,QAAS,CAAAH,QAAS,CACrCI,WAAWA,CAACC,KAAK,CAAE,CACjB,KAAK,CAACA,KAAK,CAAC,CAEZ,IAAI,CAACC,SAAS,CAAC,IAAI,CAAC,CACpB,IAAI,CAACC,UAAU,CAAC,IAAI,CAAC,CACvB,CAEAC,UAAUA,CAAA,CAAG,CACX,KAAM,CAAEC,IAAK,CAAC,CAAG,IAAI,CAACJ,KAAK,CAACI,IAAI,CAEhC,KAAM,CAAAC,SAAS,CAAG,IAAI,WAAY,CAAAX,eAAe,CACjD,GAAI,CAAAY,UAAU,CAAGF,IAAI,CAACG,MAAM,CAAC,CAACD,UAAU,CAAEE,GAAG,GAAKF,UAAU,CAACG,MAAM,CAAGD,GAAG,CAACC,MAAM,CAAGD,GAAG,CAAGF,UAAU,CAAE,EAAE,CAAC,CAExG,mBACEb,KAAA,CAAAiB,aAAA,UAAOC,SAAS,CAAEf,MAAM,CAACgB,QAAS,CAC3BC,KAAK,CAAE,CAAEC,UAAU,CAAE,CAAC,IAAI,CAACC,OAAO,CAAG,CAAC,CAAEC,SAAS,CAAE,CAAC,IAAI,CAACC,OAAO,CAAG,CAAC,CAAEC,SAAS,UAAAC,MAAA,CAAW,IAAI,CAACC,IAAI,KAAI,CAAE,eAC9G3B,KAAA,CAAAiB,aAAA,2BACAjB,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEf,MAAM,CAACY,GAAI,EAEtB,CAACH,SAAS,eACVZ,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEd,OAAO,CAACD,MAAM,CAACyB,GAAG,CAAEzB,MAAM,CAAC0B,KAAK,CAAE,CAAE,CAAC,CAGpDhB,UAAU,CAACiB,GAAG,CAAC,CAACC,CAAC,CAAEC,CAAC,gBAClBhC,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEd,OAAO,CAACD,MAAM,CAACyB,GAAG,CAAEzB,MAAM,CAAC0B,KAAK,CAAE,CAACI,GAAG,CAAED,CAAE,eACvDhC,KAAA,CAAAiB,aAAA,SAAMC,SAAS,CAAEf,MAAM,CAAC+B,KAAM,EAAEF,CAAQ,CACtC,CACL,CAED,CAAC,CAEHrB,IAAI,CAACmB,GAAG,CAAC,CAACf,GAAG,CAAEiB,CAAC,gBACdhC,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEf,MAAM,CAACY,GAAI,CAACkB,GAAG,CAAED,CAAE,EAE9B,CAACpB,SAAS,eACVZ,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEd,OAAO,CAACD,MAAM,CAACyB,GAAG,CAAEzB,MAAM,CAAC0B,KAAK,CAAE,eAC/C7B,KAAA,CAAAiB,aAAA,SAAMC,SAAS,CAAEf,MAAM,CAAC+B,KAAM,EAAEF,CAAQ,CACtC,CAAC,CAGLjB,GAAG,CAACe,GAAG,CAAC,CAACF,GAAG,CAAEO,CAAC,gBACbnC,KAAA,CAAAiB,aAAA,OAAIC,SAAS,CAAEd,OAAO,CAACD,MAAM,CAACyB,GAAG,CAAEA,GAAG,CAACQ,QAAQ,EAAIjC,MAAM,CAACiC,QAAQ,CAAER,GAAG,CAACS,OAAO,EAAIlC,MAAM,CAACkC,OAAO,CAAE,CAC/FJ,GAAG,CAAEE,CAAE,eACTnC,KAAA,CAAAiB,aAAA,SAAMC,SAAS,CAAEf,MAAM,CAAC+B,KAAM,EAAE,IAAI,CAACI,QAAQ,CAACV,GAAG,CAACM,KAAK,CAAQ,CAC7D,CACL,CAED,CACL,CAEI,CACF,CAAC,CAEZ,CACF,CAEA,cAAe,CAAA7B,eAAe","ignoreList":[]},"metadata":{},"sourceType":"module"}