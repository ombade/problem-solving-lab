{"ast":null,"code":"var _jsxFileName = \"/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/Navigator/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faSearch from '@fortawesome/fontawesome-free-solid/faSearch';\nimport faCode from '@fortawesome/fontawesome-free-solid/faCode';\nimport faBook from '@fortawesome/fontawesome-free-solid/faBook';\nimport faGithub from '@fortawesome/fontawesome-free-brands/faGithub';\nimport { ExpandableListItem, ListItem } from 'components';\nimport { classes } from 'common/util';\nimport { actions } from 'reducers';\nimport styles from './Navigator.module.scss';\nclass Navigator extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      categoriesOpened: {},\n      scratchPaperOpened: true,\n      query: ''\n    };\n  }\n  componentDidMount() {\n    const {\n      algorithm\n    } = this.props.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n    console.log(algorithm);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      algorithm\n    } = nextProps.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n  }\n  toggleCategory(key, categoryOpened = !this.state.categoriesOpened[key]) {\n    const categoriesOpened = {\n      ...this.state.categoriesOpened,\n      [key]: categoryOpened\n    };\n    this.setState({\n      categoriesOpened\n    });\n  }\n  toggleScratchPaper(scratchPaperOpened = !this.state.scratchPaperOpened) {\n    this.setState({\n      scratchPaperOpened\n    });\n  }\n  handleChangeQuery(e) {\n    const {\n      categories\n    } = this.props.directory;\n    const categoriesOpened = {};\n    const query = e.target.value;\n    categories.forEach(category => {\n      if (this.testQuery(category.name) || category.algorithms.find(algorithm => this.testQuery(algorithm.name))) {\n        categoriesOpened[category.key] = true;\n      }\n    });\n    this.setState({\n      categoriesOpened,\n      query\n    });\n  }\n  testQuery(value) {\n    const {\n      query\n    } = this.state;\n    const refine = string => string.replace(/-/g, ' ').replace(/[^\\w ]/g, '');\n    const refinedQuery = refine(query);\n    const refinedValue = refine(value);\n    return new RegExp(`(^| )${refinedQuery}`, 'i').test(refinedValue) || new RegExp(refinedQuery, 'i').test(refinedValue.split(' ').map(v => v && v[0]).join(''));\n  }\n  render() {\n    const {\n      categoriesOpened,\n      scratchPaperOpened,\n      query\n    } = this.state;\n    const {\n      className\n    } = this.props;\n    const {\n      categories,\n      scratchPapers\n    } = this.props.directory;\n    const {\n      algorithm,\n      scratchPaper\n    } = this.props.current;\n    const categoryKey = algorithm && algorithm.categoryKey;\n    const algorithmKey = algorithm && algorithm.algorithmKey;\n    const gistId = scratchPaper && scratchPaper.gistId;\n    return /*#__PURE__*/React.createElement(\"nav\", {\n      className: classes(styles.navigator, className),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.search_bar_container,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n      fixedWidth: true,\n      icon: faSearch,\n      className: styles.search_icon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: styles.search_bar,\n      \"aria-label\": \"Search\",\n      placeholder: \"Search ...\",\n      autoFocus: true,\n      value: query,\n      onChange: e => this.handleChangeQuery(e),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.algorithm_list,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }\n    }, categories.map(category => {\n      const categoryOpened = categoriesOpened[category.key];\n      let algorithms = category.algorithms;\n      if (!this.testQuery(category.name)) {\n        algorithms = algorithms.filter(algorithm => this.testQuery(algorithm.name));\n        if (!algorithms.length) return null;\n      }\n      return /*#__PURE__*/React.createElement(ExpandableListItem, {\n        key: category.key,\n        onClick: () => this.toggleCategory(category.key),\n        label: category.name,\n        opened: categoryOpened,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 17\n        }\n      }, algorithms.map(algorithm => /*#__PURE__*/React.createElement(ListItem, {\n        indent: true,\n        key: algorithm.key,\n        selected: category.key === categoryKey && algorithm.key === algorithmKey,\n        to: `/${category.key}/${algorithm.key}`,\n        label: algorithm.name,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 23\n        }\n      })));\n    })));\n  }\n}\nexport default connect(({\n  current,\n  directory,\n  env\n}) => ({\n  current,\n  directory,\n  env\n}), actions)(Navigator);","map":{"version":3,"names":["React","connect","FontAwesomeIcon","faSearch","faCode","faBook","faGithub","ExpandableListItem","ListItem","classes","actions","styles","Navigator","Component","constructor","props","state","categoriesOpened","scratchPaperOpened","query","componentDidMount","algorithm","current","toggleCategory","categoryKey","console","log","componentWillReceiveProps","nextProps","key","categoryOpened","setState","toggleScratchPaper","handleChangeQuery","e","categories","directory","target","value","forEach","category","testQuery","name","algorithms","find","refine","string","replace","refinedQuery","refinedValue","RegExp","test","split","map","v","join","render","className","scratchPapers","scratchPaper","algorithmKey","gistId","createElement","navigator","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","search_bar_container","fixedWidth","icon","search_icon","type","search_bar","placeholder","autoFocus","onChange","algorithm_list","filter","length","onClick","label","opened","indent","selected","to","env"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/Navigator/index.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faSearch from '@fortawesome/fontawesome-free-solid/faSearch';\nimport faCode from '@fortawesome/fontawesome-free-solid/faCode';\nimport faBook from '@fortawesome/fontawesome-free-solid/faBook';\nimport faGithub from '@fortawesome/fontawesome-free-brands/faGithub';\nimport { ExpandableListItem, ListItem } from 'components';\nimport { classes } from 'common/util';\nimport { actions } from 'reducers';\nimport styles from './Navigator.module.scss';\n\nclass Navigator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoriesOpened: {},\n      scratchPaperOpened: true,\n      query: '',\n    };\n  }\n\n  componentDidMount() {\n    const { algorithm } = this.props.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n    console.log(algorithm)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { algorithm } = nextProps.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n  }\n\n  toggleCategory(key, categoryOpened = !this.state.categoriesOpened[key]) {\n    const categoriesOpened = {\n      ...this.state.categoriesOpened,\n      [key]: categoryOpened,\n    };\n    this.setState({ categoriesOpened });\n  }\n\n  toggleScratchPaper(scratchPaperOpened = !this.state.scratchPaperOpened) {\n    this.setState({ scratchPaperOpened });\n  }\n\n  handleChangeQuery(e) {\n    const { categories } = this.props.directory;\n    const categoriesOpened = {};\n    const query = e.target.value;\n    categories.forEach(category => {\n      if (this.testQuery(category.name) || category.algorithms.find(algorithm => this.testQuery(algorithm.name))) {\n        categoriesOpened[category.key] = true;\n      }\n    });\n    this.setState({ categoriesOpened, query });\n  }\n\n  testQuery(value) {\n    const { query } = this.state;\n    const refine = string => string.replace(/-/g, ' ').replace(/[^\\w ]/g, '');\n    const refinedQuery = refine(query);\n    const refinedValue = refine(value);\n    return new RegExp(`(^| )${refinedQuery}`, 'i').test(refinedValue) ||\n      new RegExp(refinedQuery, 'i').test(refinedValue.split(' ').map(v => v && v[0]).join(''));\n  }\n\n  render() {\n    const { categoriesOpened, scratchPaperOpened, query } = this.state;\n    const { className } = this.props;\n    const { categories, scratchPapers } = this.props.directory;\n    const { algorithm, scratchPaper } = this.props.current;\n\n    const categoryKey = algorithm && algorithm.categoryKey;\n    const algorithmKey = algorithm && algorithm.algorithmKey;\n    const gistId = scratchPaper && scratchPaper.gistId;\n\n    return (\n      <nav className={classes(styles.navigator, className)}>\n        <div className={styles.search_bar_container}>\n          <FontAwesomeIcon fixedWidth icon={faSearch} className={styles.search_icon}/>\n          <input type=\"text\" className={styles.search_bar} aria-label=\"Search\" placeholder=\"Search ...\" autoFocus\n                 value={query} onChange={e => this.handleChangeQuery(e)}/>\n        </div>\n        <div className={styles.algorithm_list}>\n          {\n            categories.map(category => {\n              const categoryOpened = categoriesOpened[category.key];\n              let algorithms = category.algorithms;\n              if (!this.testQuery(category.name)) {\n                algorithms = algorithms.filter(algorithm => this.testQuery(algorithm.name));\n                if (!algorithms.length) return null;\n              }\n              return (\n                <ExpandableListItem key={category.key} onClick={() => this.toggleCategory(category.key)}\n                                    label={category.name}\n                                    opened={categoryOpened}>\n                  {\n                    algorithms.map(algorithm => (\n                      <ListItem indent key={algorithm.key}\n                                selected={category.key === categoryKey && algorithm.key === algorithmKey}\n                                to={`/${category.key}/${algorithm.key}`} label={algorithm.name}/>\n                    ))\n                  }\n                </ExpandableListItem>\n              );\n            })\n          }\n        </div>\n        \n      </nav>\n    );\n  }\n}\n\nexport default connect(({ current, directory, env }) => ({ current, directory, env }), actions)(\n  Navigator,\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}