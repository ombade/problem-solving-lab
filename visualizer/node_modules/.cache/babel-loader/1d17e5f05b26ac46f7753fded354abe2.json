{"ast":null,"code":"import React from'react';import{connect}from'react-redux';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import faSearch from'@fortawesome/fontawesome-free-solid/faSearch';import faCode from'@fortawesome/fontawesome-free-solid/faCode';import faBook from'@fortawesome/fontawesome-free-solid/faBook';import faGithub from'@fortawesome/fontawesome-free-brands/faGithub';import{ExpandableListItem,ListItem}from'components';import{classes}from'common/util';import{actions}from'reducers';import styles from'./Navigator.module.scss';class Navigator extends React.Component{constructor(props){super(props);this.state={categoriesOpened:{},scratchPaperOpened:true,query:''};}componentDidMount(){const{algorithm}=this.props.current;if(algorithm){this.toggleCategory(algorithm.categoryKey,true);}console.log(algorithm);}componentWillReceiveProps(nextProps){const{algorithm}=nextProps.current;if(algorithm){this.toggleCategory(algorithm.categoryKey,true);}}toggleCategory(key){let categoryOpened=arguments.length>1&&arguments[1]!==undefined?arguments[1]:!this.state.categoriesOpened[key];const categoriesOpened={...this.state.categoriesOpened,[key]:categoryOpened};this.setState({categoriesOpened});}toggleScratchPaper(){let scratchPaperOpened=arguments.length>0&&arguments[0]!==undefined?arguments[0]:!this.state.scratchPaperOpened;this.setState({scratchPaperOpened});}handleChangeQuery(e){const{categories}=this.props.directory;const categoriesOpened={};const query=e.target.value;categories.forEach(category=>{if(this.testQuery(category.name)||category.algorithms.find(algorithm=>this.testQuery(algorithm.name))){categoriesOpened[category.key]=true;}});this.setState({categoriesOpened,query});}testQuery(value){const{query}=this.state;const refine=string=>string.replace(/-/g,' ').replace(/[^\\w ]/g,'');const refinedQuery=refine(query);const refinedValue=refine(value);return new RegExp(\"(^| )\".concat(refinedQuery),'i').test(refinedValue)||new RegExp(refinedQuery,'i').test(refinedValue.split(' ').map(v=>v&&v[0]).join(''));}render(){const{categoriesOpened,scratchPaperOpened,query}=this.state;const{className}=this.props;const{categories,scratchPapers}=this.props.directory;const{algorithm,scratchPaper}=this.props.current;const categoryKey=algorithm&&algorithm.categoryKey;const algorithmKey=algorithm&&algorithm.algorithmKey;const gistId=scratchPaper&&scratchPaper.gistId;return/*#__PURE__*/React.createElement(\"nav\",{className:classes(styles.navigator,className)},/*#__PURE__*/React.createElement(\"div\",{className:styles.search_bar_container},/*#__PURE__*/React.createElement(FontAwesomeIcon,{fixedWidth:true,icon:faSearch,className:styles.search_icon}),/*#__PURE__*/React.createElement(\"input\",{type:\"text\",className:styles.search_bar,\"aria-label\":\"Search\",placeholder:\"Search ...\",autoFocus:true,value:query,onChange:e=>this.handleChangeQuery(e)})),/*#__PURE__*/React.createElement(\"div\",{className:styles.algorithm_list},categories.map(category=>{const categoryOpened=categoriesOpened[category.key];let algorithms=category.algorithms;if(!this.testQuery(category.name)){algorithms=algorithms.filter(algorithm=>this.testQuery(algorithm.name));if(!algorithms.length)return null;}return/*#__PURE__*/React.createElement(ExpandableListItem,{key:category.key,onClick:()=>this.toggleCategory(category.key),label:category.name,opened:categoryOpened},algorithms.map(algorithm=>/*#__PURE__*/React.createElement(ListItem,{indent:true,key:algorithm.key,selected:category.key===categoryKey&&algorithm.key===algorithmKey,to:\"/\".concat(category.key,\"/\").concat(algorithm.key),label:algorithm.name})));})));}}export default connect(_ref=>{let{current,directory,env}=_ref;return{current,directory,env};},actions)(Navigator);","map":{"version":3,"names":["React","connect","FontAwesomeIcon","faSearch","faCode","faBook","faGithub","ExpandableListItem","ListItem","classes","actions","styles","Navigator","Component","constructor","props","state","categoriesOpened","scratchPaperOpened","query","componentDidMount","algorithm","current","toggleCategory","categoryKey","console","log","componentWillReceiveProps","nextProps","key","categoryOpened","arguments","length","undefined","setState","toggleScratchPaper","handleChangeQuery","e","categories","directory","target","value","forEach","category","testQuery","name","algorithms","find","refine","string","replace","refinedQuery","refinedValue","RegExp","concat","test","split","map","v","join","render","className","scratchPapers","scratchPaper","algorithmKey","gistId","createElement","navigator","search_bar_container","fixedWidth","icon","search_icon","type","search_bar","placeholder","autoFocus","onChange","algorithm_list","filter","onClick","label","opened","indent","selected","to","_ref","env"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/Navigator/index.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport faSearch from '@fortawesome/fontawesome-free-solid/faSearch';\nimport faCode from '@fortawesome/fontawesome-free-solid/faCode';\nimport faBook from '@fortawesome/fontawesome-free-solid/faBook';\nimport faGithub from '@fortawesome/fontawesome-free-brands/faGithub';\nimport { ExpandableListItem, ListItem } from 'components';\nimport { classes } from 'common/util';\nimport { actions } from 'reducers';\nimport styles from './Navigator.module.scss';\n\nclass Navigator extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      categoriesOpened: {},\n      scratchPaperOpened: true,\n      query: '',\n    };\n  }\n\n  componentDidMount() {\n    const { algorithm } = this.props.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n    console.log(algorithm)\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { algorithm } = nextProps.current;\n    if (algorithm) {\n      this.toggleCategory(algorithm.categoryKey, true);\n    }\n  }\n\n  toggleCategory(key, categoryOpened = !this.state.categoriesOpened[key]) {\n    const categoriesOpened = {\n      ...this.state.categoriesOpened,\n      [key]: categoryOpened,\n    };\n    this.setState({ categoriesOpened });\n  }\n\n  toggleScratchPaper(scratchPaperOpened = !this.state.scratchPaperOpened) {\n    this.setState({ scratchPaperOpened });\n  }\n\n  handleChangeQuery(e) {\n    const { categories } = this.props.directory;\n    const categoriesOpened = {};\n    const query = e.target.value;\n    categories.forEach(category => {\n      if (this.testQuery(category.name) || category.algorithms.find(algorithm => this.testQuery(algorithm.name))) {\n        categoriesOpened[category.key] = true;\n      }\n    });\n    this.setState({ categoriesOpened, query });\n  }\n\n  testQuery(value) {\n    const { query } = this.state;\n    const refine = string => string.replace(/-/g, ' ').replace(/[^\\w ]/g, '');\n    const refinedQuery = refine(query);\n    const refinedValue = refine(value);\n    return new RegExp(`(^| )${refinedQuery}`, 'i').test(refinedValue) ||\n      new RegExp(refinedQuery, 'i').test(refinedValue.split(' ').map(v => v && v[0]).join(''));\n  }\n\n  render() {\n    const { categoriesOpened, scratchPaperOpened, query } = this.state;\n    const { className } = this.props;\n    const { categories, scratchPapers } = this.props.directory;\n    const { algorithm, scratchPaper } = this.props.current;\n\n    const categoryKey = algorithm && algorithm.categoryKey;\n    const algorithmKey = algorithm && algorithm.algorithmKey;\n    const gistId = scratchPaper && scratchPaper.gistId;\n\n    return (\n      <nav className={classes(styles.navigator, className)}>\n        <div className={styles.search_bar_container}>\n          <FontAwesomeIcon fixedWidth icon={faSearch} className={styles.search_icon}/>\n          <input type=\"text\" className={styles.search_bar} aria-label=\"Search\" placeholder=\"Search ...\" autoFocus\n                 value={query} onChange={e => this.handleChangeQuery(e)}/>\n        </div>\n        <div className={styles.algorithm_list}>\n          {\n            categories.map(category => {\n              const categoryOpened = categoriesOpened[category.key];\n              let algorithms = category.algorithms;\n              if (!this.testQuery(category.name)) {\n                algorithms = algorithms.filter(algorithm => this.testQuery(algorithm.name));\n                if (!algorithms.length) return null;\n              }\n              return (\n                <ExpandableListItem key={category.key} onClick={() => this.toggleCategory(category.key)}\n                                    label={category.name}\n                                    opened={categoryOpened}>\n                  {\n                    algorithms.map(algorithm => (\n                      <ListItem indent key={algorithm.key}\n                                selected={category.key === categoryKey && algorithm.key === algorithmKey}\n                                to={`/${category.key}/${algorithm.key}`} label={algorithm.name}/>\n                    ))\n                  }\n                </ExpandableListItem>\n              );\n            })\n          }\n        </div>\n        \n      </nav>\n    );\n  }\n}\n\nexport default connect(({ current, directory, env }) => ({ current, directory, env }), actions)(\n  Navigator,\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}