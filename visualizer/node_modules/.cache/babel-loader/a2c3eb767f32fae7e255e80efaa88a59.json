{"ast":null,"code":"var _jsxFileName = \"/home/om-bade/Downloads/AlgoLab-main/visualizer/src/core/renderers/MarkdownRenderer/index.js\";\nimport React from 'react';\nimport { Renderer } from 'core/renderers';\nimport styles from './MarkdownRenderer.module.scss';\nimport ReactMarkdown from 'react-markdown';\nclass MarkdownRenderer extends Renderer {\n  renderData() {\n    const {\n      markdown\n    } = this.props.data;\n    const heading = ({\n      level,\n      children,\n      ...rest\n    }) => {\n      const HeadingComponent = [props => /*#__PURE__*/React.createElement(\"h1\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 18\n        }\n      })), props => /*#__PURE__*/React.createElement(\"h2\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 13,\n          columnNumber: 18\n        }\n      })), props => /*#__PURE__*/React.createElement(\"h3\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 18\n        }\n      })), props => /*#__PURE__*/React.createElement(\"h4\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 18\n        }\n      })), props => /*#__PURE__*/React.createElement(\"h5\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 18\n        }\n      })), props => /*#__PURE__*/React.createElement(\"h6\", Object.assign({}, props, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 18\n        }\n      }))][level - 1];\n      const idfy = text => text.toLowerCase().trim().replace(/[^\\w \\-]/g, '').replace(/ /g, '-');\n      const getText = children => {\n        return React.Children.map(children, child => {\n          if (!child) return '';\n          if (typeof child === 'string') return child;\n          if ('props' in child) return getText(child.props.children);\n          return '';\n        }).join('');\n      };\n      const id = idfy(getText(children));\n      return /*#__PURE__*/React.createElement(HeadingComponent, Object.assign({\n        id: id\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }\n      }), children);\n    };\n    const link = ({\n      href,\n      ...rest\n    }) => {\n      return /^#/.test(href) ? /*#__PURE__*/React.createElement(\"a\", Object.assign({\n        href: href\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 9\n        }\n      })) : /*#__PURE__*/React.createElement(\"a\", Object.assign({\n        href: href,\n        rel: \"noopener\",\n        target: \"_blank\"\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 9\n        }\n      }));\n    };\n    const image = ({\n      src,\n      ...rest\n    }) => {\n      let newSrc = src;\n      let style = {\n        maxWidth: '100%'\n      };\n      const CODECOGS = 'https://latex.codecogs.com/svg.latex?';\n      const WIKIMEDIA_IMAGE = 'https://upload.wikimedia.org/wikipedia/';\n      const WIKIMEDIA_MATH = 'https://wikimedia.org/api/rest_v1/media/math/render/svg/';\n      if (src.startsWith(CODECOGS)) {\n        const latex = src.substring(CODECOGS.length);\n        newSrc = `${CODECOGS}\\\\color{White}${latex}`;\n      } else if (src.startsWith(WIKIMEDIA_IMAGE)) {\n        style.backgroundColor = 'white';\n      } else if (src.startsWith(WIKIMEDIA_MATH)) {\n        style.filter = 'invert(100%)';\n      }\n      return /*#__PURE__*/React.createElement(\"img\", Object.assign({\n        src: newSrc,\n        style: style\n      }, rest, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 14\n        }\n      }));\n    };\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: styles.markdown,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(ReactMarkdown, {\n      className: styles.content,\n      source: markdown,\n      renderers: {\n        heading,\n        link,\n        image\n      },\n      escapeHtml: false,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }));\n  }\n}\nexport default MarkdownRenderer;","map":{"version":3,"names":["React","Renderer","styles","ReactMarkdown","MarkdownRenderer","renderData","markdown","props","data","heading","level","children","rest","HeadingComponent","createElement","Object","assign","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","idfy","text","toLowerCase","trim","replace","getText","Children","map","child","join","id","link","href","test","rel","target","image","src","newSrc","style","maxWidth","CODECOGS","WIKIMEDIA_IMAGE","WIKIMEDIA_MATH","startsWith","latex","substring","length","backgroundColor","filter","className","content","source","renderers","escapeHtml"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/core/renderers/MarkdownRenderer/index.js"],"sourcesContent":["import React from 'react';\nimport { Renderer } from 'core/renderers';\nimport styles from './MarkdownRenderer.module.scss';\nimport ReactMarkdown from 'react-markdown';\n\nclass MarkdownRenderer extends Renderer {\n  renderData() {\n    const { markdown } = this.props.data;\n\n    const heading = ({ level, children, ...rest }) => {\n      const HeadingComponent = [\n        props => <h1 {...props} />,\n        props => <h2 {...props} />,\n        props => <h3 {...props} />,\n        props => <h4 {...props} />,\n        props => <h5 {...props} />,\n        props => <h6 {...props} />,\n      ][level - 1];\n\n      const idfy = text => text.toLowerCase().trim().replace(/[^\\w \\-]/g, '').replace(/ /g, '-');\n\n      const getText = children => {\n        return React.Children.map(children, child => {\n          if (!child) return '';\n          if (typeof child === 'string') return child;\n          if ('props' in child) return getText(child.props.children);\n          return '';\n        }).join('');\n      };\n\n      const id = idfy(getText(children));\n\n      return (\n        <HeadingComponent id={id} {...rest}>\n          {children}\n        </HeadingComponent>\n      );\n    };\n\n    const link = ({ href, ...rest }) => {\n      return /^#/.test(href) ? (\n        <a href={href} {...rest} />\n      ) : (\n        <a href={href} rel=\"noopener\" target=\"_blank\" {...rest} />\n      );\n    };\n\n    const image = ({ src, ...rest }) => {\n      let newSrc = src;\n      let style = { maxWidth: '100%' };\n      const CODECOGS = 'https://latex.codecogs.com/svg.latex?';\n      const WIKIMEDIA_IMAGE = 'https://upload.wikimedia.org/wikipedia/';\n      const WIKIMEDIA_MATH = 'https://wikimedia.org/api/rest_v1/media/math/render/svg/';\n      if (src.startsWith(CODECOGS)) {\n        const latex = src.substring(CODECOGS.length);\n        newSrc = `${CODECOGS}\\\\color{White}${latex}`;\n      } else if (src.startsWith(WIKIMEDIA_IMAGE)) {\n        style.backgroundColor = 'white';\n      } else if (src.startsWith(WIKIMEDIA_MATH)) {\n        style.filter = 'invert(100%)';\n      }\n      return <img src={newSrc} style={style} {...rest} />;\n    };\n\n    return (\n      <div className={styles.markdown}>\n        <ReactMarkdown className={styles.content} source={markdown} renderers={{ heading, link, image }}\n                       escapeHtml={false}/>\n      </div>\n    );\n  }\n}\n\nexport default MarkdownRenderer;\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}