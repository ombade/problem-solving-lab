{"ast":null,"code":"const classes = (...arr) => arr.filter(v => v).join(' ');\nconst distance = (a, b) => {\n  const dx = a.x - b.x;\n  const dy = a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\nconst extension = fileName => /(?:\\.([^.]+))?$/.exec(fileName)[1];\nconst refineGist = gist => {\n  const gistId = gist.id;\n  const title = gist.description;\n  delete gist.files['algorithm-visualizer'];\n  const {\n    login,\n    avatar_url\n  } = gist.owner;\n  const files = Object.values(gist.files).map(file => ({\n    name: file.filename,\n    content: file.content,\n    contributors: [{\n      login,\n      avatar_url\n    }]\n  }));\n  return {\n    login,\n    gistId,\n    title,\n    files\n  };\n};\nconst createFile = (name, content, contributors) => ({\n  name,\n  content,\n  contributors\n});\nconst createProjectFile = (name, content) => createFile(name, content, [{\n  login: 'algorithm-visualizer',\n  avatar_url: 'https://github.com/algorithm-visualizer.png'\n}]);\nconst createUserFile = (name, content) => createFile(name, content, undefined);\nconst isSaved = ({\n  titles,\n  files,\n  lastTitles,\n  lastFiles\n}) => {\n  const serialize = (titles, files) => JSON.stringify({\n    titles,\n    files: files.map(({\n      name,\n      content\n    }) => ({\n      name,\n      content\n    }))\n  });\n  return serialize(titles, files) === serialize(lastTitles, lastFiles);\n};\nexport { classes, distance, extension, refineGist, createFile, createProjectFile, createUserFile, isSaved };","map":{"version":3,"names":["classes","arr","filter","v","join","distance","a","b","dx","x","dy","y","Math","sqrt","extension","fileName","exec","refineGist","gist","gistId","id","title","description","files","login","avatar_url","owner","Object","values","map","file","name","filename","content","contributors","createFile","createProjectFile","createUserFile","undefined","isSaved","titles","lastTitles","lastFiles","serialize","JSON","stringify"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/common/util.js"],"sourcesContent":["const classes = (...arr) => arr.filter(v => v).join(' ');\n\nconst distance = (a, b) => {\n  const dx = a.x - b.x;\n  const dy = a.y - b.y;\n  return Math.sqrt(dx * dx + dy * dy);\n};\n\nconst extension = fileName => /(?:\\.([^.]+))?$/.exec(fileName)[1];\n\nconst refineGist = gist => {\n  const gistId = gist.id;\n  const title = gist.description;\n  delete gist.files['algorithm-visualizer'];\n  const { login, avatar_url } = gist.owner;\n  const files = Object.values(gist.files).map(file => ({\n    name: file.filename,\n    content: file.content,\n    contributors: [{ login, avatar_url }],\n  }));\n  return { login, gistId, title, files };\n};\n\nconst createFile = (name, content, contributors) => ({ name, content, contributors });\n\nconst createProjectFile = (name, content) => createFile(name, content, [{\n  login: 'algorithm-visualizer',\n  avatar_url: 'https://github.com/algorithm-visualizer.png',\n}]);\n\nconst createUserFile = (name, content) => createFile(name, content, undefined);\n\nconst isSaved = ({ titles, files, lastTitles, lastFiles }) => {\n  const serialize = (titles, files) => JSON.stringify({\n    titles,\n    files: files.map(({ name, content }) => ({ name, content })),\n  });\n  return serialize(titles, files) === serialize(lastTitles, lastFiles);\n};\n\nexport {\n  classes,\n  distance,\n  extension,\n  refineGist,\n  createFile,\n  createProjectFile,\n  createUserFile,\n  isSaved,\n};\n"],"mappings":"AAAA,MAAMA,OAAO,GAAGA,CAAC,GAAGC,GAAG,KAAKA,GAAG,CAACC,MAAM,CAACC,CAAC,IAAIA,CAAC,CAAC,CAACC,IAAI,CAAC,GAAG,CAAC;AAExD,MAAMC,QAAQ,GAAGA,CAACC,CAAC,EAAEC,CAAC,KAAK;EACzB,MAAMC,EAAE,GAAGF,CAAC,CAACG,CAAC,GAAGF,CAAC,CAACE,CAAC;EACpB,MAAMC,EAAE,GAAGJ,CAAC,CAACK,CAAC,GAAGJ,CAAC,CAACI,CAAC;EACpB,OAAOC,IAAI,CAACC,IAAI,CAACL,EAAE,GAAGA,EAAE,GAAGE,EAAE,GAAGA,EAAE,CAAC;AACrC,CAAC;AAED,MAAMI,SAAS,GAAGC,QAAQ,IAAI,iBAAiB,CAACC,IAAI,CAACD,QAAQ,CAAC,CAAC,CAAC,CAAC;AAEjE,MAAME,UAAU,GAAGC,IAAI,IAAI;EACzB,MAAMC,MAAM,GAAGD,IAAI,CAACE,EAAE;EACtB,MAAMC,KAAK,GAAGH,IAAI,CAACI,WAAW;EAC9B,OAAOJ,IAAI,CAACK,KAAK,CAAC,sBAAsB,CAAC;EACzC,MAAM;IAAEC,KAAK;IAAEC;EAAW,CAAC,GAAGP,IAAI,CAACQ,KAAK;EACxC,MAAMH,KAAK,GAAGI,MAAM,CAACC,MAAM,CAACV,IAAI,CAACK,KAAK,CAAC,CAACM,GAAG,CAACC,IAAI,KAAK;IACnDC,IAAI,EAAED,IAAI,CAACE,QAAQ;IACnBC,OAAO,EAAEH,IAAI,CAACG,OAAO;IACrBC,YAAY,EAAE,CAAC;MAAEV,KAAK;MAAEC;IAAW,CAAC;EACtC,CAAC,CAAC,CAAC;EACH,OAAO;IAAED,KAAK;IAAEL,MAAM;IAAEE,KAAK;IAAEE;EAAM,CAAC;AACxC,CAAC;AAED,MAAMY,UAAU,GAAGA,CAACJ,IAAI,EAAEE,OAAO,EAAEC,YAAY,MAAM;EAAEH,IAAI;EAAEE,OAAO;EAAEC;AAAa,CAAC,CAAC;AAErF,MAAME,iBAAiB,GAAGA,CAACL,IAAI,EAAEE,OAAO,KAAKE,UAAU,CAACJ,IAAI,EAAEE,OAAO,EAAE,CAAC;EACtET,KAAK,EAAE,sBAAsB;EAC7BC,UAAU,EAAE;AACd,CAAC,CAAC,CAAC;AAEH,MAAMY,cAAc,GAAGA,CAACN,IAAI,EAAEE,OAAO,KAAKE,UAAU,CAACJ,IAAI,EAAEE,OAAO,EAAEK,SAAS,CAAC;AAE9E,MAAMC,OAAO,GAAGA,CAAC;EAAEC,MAAM;EAAEjB,KAAK;EAAEkB,UAAU;EAAEC;AAAU,CAAC,KAAK;EAC5D,MAAMC,SAAS,GAAGA,CAACH,MAAM,EAAEjB,KAAK,KAAKqB,IAAI,CAACC,SAAS,CAAC;IAClDL,MAAM;IACNjB,KAAK,EAAEA,KAAK,CAACM,GAAG,CAAC,CAAC;MAAEE,IAAI;MAAEE;IAAQ,CAAC,MAAM;MAAEF,IAAI;MAAEE;IAAQ,CAAC,CAAC;EAC7D,CAAC,CAAC;EACF,OAAOU,SAAS,CAACH,MAAM,EAAEjB,KAAK,CAAC,KAAKoB,SAAS,CAACF,UAAU,EAAEC,SAAS,CAAC;AACtE,CAAC;AAED,SACE1C,OAAO,EACPK,QAAQ,EACRS,SAAS,EACTG,UAAU,EACVkB,UAAU,EACVC,iBAAiB,EACjBC,cAAc,EACdE,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module"}