{"ast":null,"code":"var _jsxFileName = \"/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/ResizableContainer/index.js\";\nimport React from 'react';\nimport { classes } from 'common/util';\nimport { Divider } from 'components';\nimport styles from './ResizableContainer.module.scss';\nclass ResizableContainer extends React.Component {\n  handleResize(prevIndex, index, targetElement, clientX, clientY) {\n    const {\n      horizontal,\n      visibles,\n      onChangeWeights\n    } = this.props;\n    const weights = [...this.props.weights];\n    const {\n      left,\n      top\n    } = targetElement.getBoundingClientRect();\n    const {\n      offsetWidth,\n      offsetHeight\n    } = targetElement.parentElement;\n    const position = horizontal ? clientX - left : clientY - top;\n    const containerSize = horizontal ? offsetWidth : offsetHeight;\n    let totalWeight = 0;\n    let subtotalWeight = 0;\n    weights.forEach((weight, i) => {\n      if (visibles && !visibles[i]) return;\n      totalWeight += weight;\n      if (i < index) subtotalWeight += weight;\n    });\n    const newWeight = position / containerSize * totalWeight;\n    let deltaWeight = newWeight - subtotalWeight;\n    deltaWeight = Math.max(deltaWeight, -weights[prevIndex]);\n    deltaWeight = Math.min(deltaWeight, weights[index]);\n    weights[prevIndex] += deltaWeight;\n    weights[index] -= deltaWeight;\n    onChangeWeights(weights);\n  }\n  render() {\n    const {\n      className,\n      children,\n      horizontal,\n      weights,\n      visibles\n    } = this.props;\n    const elements = [];\n    let lastIndex = -1;\n    const totalWeight = weights.filter((weight, i) => !visibles || visibles[i]).reduce((sumWeight, weight) => sumWeight + weight, 0);\n    children.forEach((child, i) => {\n      if (!visibles || visibles[i]) {\n        if (~lastIndex) {\n          const prevIndex = lastIndex;\n          elements.push( /*#__PURE__*/React.createElement(Divider, {\n            key: `divider-${i}`,\n            horizontal: horizontal,\n            onResize: (target, dx, dy) => this.handleResize(prevIndex, i, target, dx, dy),\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 13\n            }\n          }));\n        }\n        elements.push( /*#__PURE__*/React.createElement(\"div\", {\n          key: i,\n          className: classes(styles.wrapper),\n          style: {\n            flexGrow: weights[i] / totalWeight\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 11\n          }\n        }, child));\n        lastIndex = i;\n      }\n    });\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes(styles.resizable_container, horizontal && styles.horizontal, className),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }\n    }, elements);\n  }\n}\nexport default ResizableContainer;","map":{"version":3,"names":["React","classes","Divider","styles","ResizableContainer","Component","handleResize","prevIndex","index","targetElement","clientX","clientY","horizontal","visibles","onChangeWeights","props","weights","left","top","getBoundingClientRect","offsetWidth","offsetHeight","parentElement","position","containerSize","totalWeight","subtotalWeight","forEach","weight","i","newWeight","deltaWeight","Math","max","min","render","className","children","elements","lastIndex","filter","reduce","sumWeight","child","push","createElement","key","onResize","target","dx","dy","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","wrapper","style","flexGrow","resizable_container"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/ResizableContainer/index.js"],"sourcesContent":["import React from 'react';\nimport { classes } from 'common/util';\nimport { Divider } from 'components';\nimport styles from './ResizableContainer.module.scss';\n\nclass ResizableContainer extends React.Component {\n  handleResize(prevIndex, index, targetElement, clientX, clientY) {\n    const { horizontal, visibles, onChangeWeights } = this.props;\n    const weights = [...this.props.weights];\n\n    const { left, top } = targetElement.getBoundingClientRect();\n    const { offsetWidth, offsetHeight } = targetElement.parentElement;\n    const position = horizontal ? clientX - left : clientY - top;\n    const containerSize = horizontal ? offsetWidth : offsetHeight;\n\n    let totalWeight = 0;\n    let subtotalWeight = 0;\n    weights.forEach((weight, i) => {\n      if (visibles && !visibles[i]) return;\n      totalWeight += weight;\n      if (i < index) subtotalWeight += weight;\n    });\n    const newWeight = position / containerSize * totalWeight;\n    let deltaWeight = newWeight - subtotalWeight;\n    deltaWeight = Math.max(deltaWeight, -weights[prevIndex]);\n    deltaWeight = Math.min(deltaWeight, weights[index]);\n    weights[prevIndex] += deltaWeight;\n    weights[index] -= deltaWeight;\n    onChangeWeights(weights);\n  }\n\n  render() {\n    const { className, children, horizontal, weights, visibles } = this.props;\n\n    const elements = [];\n    let lastIndex = -1;\n    const totalWeight = weights.filter((weight, i) => !visibles || visibles[i])\n      .reduce((sumWeight, weight) => sumWeight + weight, 0);\n    children.forEach((child, i) => {\n      if (!visibles || visibles[i]) {\n        if (~lastIndex) {\n          const prevIndex = lastIndex;\n          elements.push(\n            <Divider key={`divider-${i}`} horizontal={horizontal}\n                     onResize={((target, dx, dy) => this.handleResize(prevIndex, i, target, dx, dy))} />,\n          );\n        }\n        elements.push(\n          <div key={i} className={classes(styles.wrapper)} style={{\n            flexGrow: weights[i] / totalWeight,\n          }}>\n            {child}\n          </div>,\n        );\n        lastIndex = i;\n      }\n    });\n\n    return (\n      <div className={classes(styles.resizable_container, horizontal && styles.horizontal, className)}>\n        {elements}\n      </div>\n    );\n  }\n}\n\nexport default ResizableContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}