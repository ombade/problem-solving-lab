{"ast":null,"code":"import React from'react';import{classes}from'common/util';import{Divider}from'components';import styles from'./ResizableContainer.module.scss';class ResizableContainer extends React.Component{handleResize(prevIndex,index,targetElement,clientX,clientY){const{horizontal,visibles,onChangeWeights}=this.props;const weights=[...this.props.weights];const{left,top}=targetElement.getBoundingClientRect();const{offsetWidth,offsetHeight}=targetElement.parentElement;const position=horizontal?clientX-left:clientY-top;const containerSize=horizontal?offsetWidth:offsetHeight;let totalWeight=0;let subtotalWeight=0;weights.forEach((weight,i)=>{if(visibles&&!visibles[i])return;totalWeight+=weight;if(i<index)subtotalWeight+=weight;});const newWeight=position/containerSize*totalWeight;let deltaWeight=newWeight-subtotalWeight;deltaWeight=Math.max(deltaWeight,-weights[prevIndex]);deltaWeight=Math.min(deltaWeight,weights[index]);weights[prevIndex]+=deltaWeight;weights[index]-=deltaWeight;onChangeWeights(weights);}render(){const{className,children,horizontal,weights,visibles}=this.props;const elements=[];let lastIndex=-1;const totalWeight=weights.filter((weight,i)=>!visibles||visibles[i]).reduce((sumWeight,weight)=>sumWeight+weight,0);children.forEach((child,i)=>{if(!visibles||visibles[i]){if(~lastIndex){const prevIndex=lastIndex;elements.push(/*#__PURE__*/React.createElement(Divider,{key:\"divider-\".concat(i),horizontal:horizontal,onResize:(target,dx,dy)=>this.handleResize(prevIndex,i,target,dx,dy)}));}elements.push(/*#__PURE__*/React.createElement(\"div\",{key:i,className:classes(styles.wrapper),style:{flexGrow:weights[i]/totalWeight}},child));lastIndex=i;}});return/*#__PURE__*/React.createElement(\"div\",{className:classes(styles.resizable_container,horizontal&&styles.horizontal,className)},elements);}}export default ResizableContainer;","map":{"version":3,"names":["React","classes","Divider","styles","ResizableContainer","Component","handleResize","prevIndex","index","targetElement","clientX","clientY","horizontal","visibles","onChangeWeights","props","weights","left","top","getBoundingClientRect","offsetWidth","offsetHeight","parentElement","position","containerSize","totalWeight","subtotalWeight","forEach","weight","i","newWeight","deltaWeight","Math","max","min","render","className","children","elements","lastIndex","filter","reduce","sumWeight","child","push","createElement","key","concat","onResize","target","dx","dy","wrapper","style","flexGrow","resizable_container"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/ResizableContainer/index.js"],"sourcesContent":["import React from 'react';\nimport { classes } from 'common/util';\nimport { Divider } from 'components';\nimport styles from './ResizableContainer.module.scss';\n\nclass ResizableContainer extends React.Component {\n  handleResize(prevIndex, index, targetElement, clientX, clientY) {\n    const { horizontal, visibles, onChangeWeights } = this.props;\n    const weights = [...this.props.weights];\n\n    const { left, top } = targetElement.getBoundingClientRect();\n    const { offsetWidth, offsetHeight } = targetElement.parentElement;\n    const position = horizontal ? clientX - left : clientY - top;\n    const containerSize = horizontal ? offsetWidth : offsetHeight;\n\n    let totalWeight = 0;\n    let subtotalWeight = 0;\n    weights.forEach((weight, i) => {\n      if (visibles && !visibles[i]) return;\n      totalWeight += weight;\n      if (i < index) subtotalWeight += weight;\n    });\n    const newWeight = position / containerSize * totalWeight;\n    let deltaWeight = newWeight - subtotalWeight;\n    deltaWeight = Math.max(deltaWeight, -weights[prevIndex]);\n    deltaWeight = Math.min(deltaWeight, weights[index]);\n    weights[prevIndex] += deltaWeight;\n    weights[index] -= deltaWeight;\n    onChangeWeights(weights);\n  }\n\n  render() {\n    const { className, children, horizontal, weights, visibles } = this.props;\n\n    const elements = [];\n    let lastIndex = -1;\n    const totalWeight = weights.filter((weight, i) => !visibles || visibles[i])\n      .reduce((sumWeight, weight) => sumWeight + weight, 0);\n    children.forEach((child, i) => {\n      if (!visibles || visibles[i]) {\n        if (~lastIndex) {\n          const prevIndex = lastIndex;\n          elements.push(\n            <Divider key={`divider-${i}`} horizontal={horizontal}\n                     onResize={((target, dx, dy) => this.handleResize(prevIndex, i, target, dx, dy))} />,\n          );\n        }\n        elements.push(\n          <div key={i} className={classes(styles.wrapper)} style={{\n            flexGrow: weights[i] / totalWeight,\n          }}>\n            {child}\n          </div>,\n        );\n        lastIndex = i;\n      }\n    });\n\n    return (\n      <div className={classes(styles.resizable_container, horizontal && styles.horizontal, className)}>\n        {elements}\n      </div>\n    );\n  }\n}\n\nexport default ResizableContainer;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}