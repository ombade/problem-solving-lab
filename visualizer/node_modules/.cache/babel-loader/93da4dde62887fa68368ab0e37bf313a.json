{"ast":null,"code":"var _jsxFileName = \"/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/VisualizationViewer/index.js\";\nimport React from 'react';\nimport { connect } from 'react-redux';\nimport { BaseComponent } from 'components';\nimport { actions } from 'reducers';\nimport styles from './VisualizationViewer.module.scss';\nimport * as TracerClasses from 'core/tracers';\nimport * as LayoutClasses from 'core/layouts';\nimport { classes } from 'common/util';\nclass VisualizationViewer extends BaseComponent {\n  constructor(props) {\n    super(props);\n    this.reset();\n  }\n  reset() {\n    this.root = null;\n    this.objects = {};\n  }\n  componentDidMount() {\n    const {\n      chunks,\n      cursor\n    } = this.props.player;\n    this.update(chunks, cursor);\n  }\n  componentWillReceiveProps(nextProps) {\n    const {\n      chunks,\n      cursor\n    } = nextProps.player;\n    const {\n      chunks: oldChunks,\n      cursor: oldCursor\n    } = this.props.player;\n    if (chunks !== oldChunks || cursor !== oldCursor) {\n      this.update(chunks, cursor, oldChunks, oldCursor);\n    }\n  }\n  update(chunks, cursor, oldChunks = [], oldCursor = 0) {\n    let applyingChunks;\n    if (cursor > oldCursor) {\n      applyingChunks = chunks.slice(oldCursor, cursor);\n    } else {\n      this.reset();\n      applyingChunks = chunks.slice(0, cursor);\n    }\n    applyingChunks.forEach(chunk => this.applyChunk(chunk));\n    const lastChunk = applyingChunks[applyingChunks.length - 1];\n    if (lastChunk && lastChunk.lineNumber !== undefined) {\n      this.props.setLineIndicator({\n        lineNumber: lastChunk.lineNumber,\n        cursor\n      });\n    } else {\n      this.props.setLineIndicator(undefined);\n    }\n  }\n  applyCommand(command) {\n    const {\n      key,\n      method,\n      args\n    } = command;\n    try {\n      if (key === null && method === 'setRoot') {\n        const [root] = args;\n        this.root = this.objects[root];\n      } else if (method === 'destroy') {\n        delete this.objects[key];\n      } else if (method in LayoutClasses) {\n        const [children] = args;\n        const LayoutClass = LayoutClasses[method];\n        this.objects[key] = new LayoutClass(key, key => this.objects[key], children);\n      } else if (method in TracerClasses) {\n        const className = method;\n        const [title = className] = args;\n        const TracerClass = TracerClasses[className];\n        this.objects[key] = new TracerClass(key, key => this.objects[key], title);\n      } else {\n        this.objects[key][method](...args);\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n  applyChunk(chunk) {\n    chunk.commands.forEach(command => this.applyCommand(command));\n  }\n  render() {\n    const {\n      className\n    } = this.props;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: classes(styles.visualization_viewer, className),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 7\n      }\n    }, this.root && this.root.render());\n  }\n}\nexport default connect(({\n  player\n}) => ({\n  player\n}), actions)(VisualizationViewer);","map":{"version":3,"names":["React","connect","BaseComponent","actions","styles","TracerClasses","LayoutClasses","classes","VisualizationViewer","constructor","props","reset","root","objects","componentDidMount","chunks","cursor","player","update","componentWillReceiveProps","nextProps","oldChunks","oldCursor","applyingChunks","slice","forEach","chunk","applyChunk","lastChunk","length","lineNumber","undefined","setLineIndicator","applyCommand","command","key","method","args","children","LayoutClass","className","title","TracerClass","error","handleError","commands","render","createElement","visualization_viewer","__self","__source","fileName","_jsxFileName","columnNumber"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/components/VisualizationViewer/index.js"],"sourcesContent":["import React from 'react';\nimport { connect } from 'react-redux';\nimport { BaseComponent } from 'components';\nimport { actions } from 'reducers';\nimport styles from './VisualizationViewer.module.scss';\nimport * as TracerClasses from 'core/tracers';\nimport * as LayoutClasses from 'core/layouts';\nimport { classes } from 'common/util';\n\nclass VisualizationViewer extends BaseComponent {\n  constructor(props) {\n    super(props);\n\n    this.reset();\n  }\n\n  reset() {\n    this.root = null;\n    this.objects = {};\n  }\n\n  componentDidMount() {\n    const { chunks, cursor } = this.props.player;\n    this.update(chunks, cursor);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const { chunks, cursor } = nextProps.player;\n    const { chunks: oldChunks, cursor: oldCursor } = this.props.player;\n    if (chunks !== oldChunks || cursor !== oldCursor) {\n      this.update(chunks, cursor, oldChunks, oldCursor);\n    }\n  }\n\n  update(chunks, cursor, oldChunks = [], oldCursor = 0) {\n    let applyingChunks;\n    if (cursor > oldCursor) {\n      applyingChunks = chunks.slice(oldCursor, cursor);\n    } else {\n      this.reset();\n      applyingChunks = chunks.slice(0, cursor);\n    }\n    applyingChunks.forEach(chunk => this.applyChunk(chunk));\n\n    const lastChunk = applyingChunks[applyingChunks.length - 1];\n    if (lastChunk && lastChunk.lineNumber !== undefined) {\n      this.props.setLineIndicator({ lineNumber: lastChunk.lineNumber, cursor });\n    } else {\n      this.props.setLineIndicator(undefined);\n    }\n  }\n\n  applyCommand(command) {\n    const { key, method, args } = command;\n    try {\n      if (key === null && method === 'setRoot') {\n        const [root] = args;\n        this.root = this.objects[root];\n      } else if (method === 'destroy') {\n        delete this.objects[key];\n      } else if (method in LayoutClasses) {\n        const [children] = args;\n        const LayoutClass = LayoutClasses[method];\n        this.objects[key] = new LayoutClass(key, key => this.objects[key], children);\n      } else if (method in TracerClasses) {\n        const className = method;\n        const [title = className] = args;\n        const TracerClass = TracerClasses[className];\n        this.objects[key] = new TracerClass(key, key => this.objects[key], title);\n      } else {\n        this.objects[key][method](...args);\n      }\n    } catch (error) {\n      this.handleError(error);\n    }\n  }\n\n  applyChunk(chunk) {\n    chunk.commands.forEach(command => this.applyCommand(command));\n  }\n\n  render() {\n    const { className } = this.props;\n\n    return (\n      <div className={classes(styles.visualization_viewer, className)}>\n        {\n          this.root && this.root.render()\n        }\n      </div>\n    );\n  }\n}\n\nexport default connect(({ player }) => ({ player }), actions)(\n  VisualizationViewer,\n);\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module"}