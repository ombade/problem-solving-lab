{"ast":null,"code":"import { combineActions, createAction, handleActions } from 'redux-actions';\nimport uuid from 'uuid';\nconst prefix = 'TOAST';\nconst showSuccessToast = createAction(`${prefix}/SHOW_SUCCESS_TOAST`, message => ({\n  type: 'success',\n  message\n}));\nconst showErrorToast = createAction(`${prefix}/SHOW_ERROR_TOAST`, message => ({\n  type: 'error',\n  message\n}));\nconst hideToast = createAction(`${prefix}/HIDE_TOAST`, id => ({\n  id\n}));\nexport const actions = {\n  showSuccessToast,\n  showErrorToast,\n  hideToast\n};\nconst defaultState = {\n  toasts: []\n};\nexport default handleActions({\n  [combineActions(showSuccessToast, showErrorToast)]: (state, {\n    payload\n  }) => {\n    const id = uuid.v4();\n    const toast = {\n      id,\n      ...payload\n    };\n    const toasts = [...state.toasts, toast];\n    return {\n      ...state,\n      toasts\n    };\n  },\n  [hideToast]: (state, {\n    payload\n  }) => {\n    const {\n      id\n    } = payload;\n    const toasts = state.toasts.filter(toast => toast.id !== id);\n    return {\n      ...state,\n      toasts\n    };\n  }\n}, defaultState);","map":{"version":3,"names":["combineActions","createAction","handleActions","uuid","prefix","showSuccessToast","message","type","showErrorToast","hideToast","id","actions","defaultState","toasts","state","payload","v4","toast","filter"],"sources":["/home/om-bade/Downloads/AlgoLab-main/visualizer/src/reducers/toast.js"],"sourcesContent":["import { combineActions, createAction, handleActions } from 'redux-actions';\nimport uuid from 'uuid';\n\nconst prefix = 'TOAST';\n\nconst showSuccessToast = createAction(`${prefix}/SHOW_SUCCESS_TOAST`, message => ({ type: 'success', message }));\nconst showErrorToast = createAction(`${prefix}/SHOW_ERROR_TOAST`, message => ({ type: 'error', message }));\nconst hideToast = createAction(`${prefix}/HIDE_TOAST`, id => ({ id }));\n\nexport const actions = {\n  showSuccessToast,\n  showErrorToast,\n  hideToast,\n};\n\nconst defaultState = {\n  toasts: [],\n};\n\nexport default handleActions({\n  [combineActions(\n    showSuccessToast,\n    showErrorToast,\n  )]: (state, { payload }) => {\n    const id = uuid.v4();\n    const toast = {\n      id,\n      ...payload,\n    };\n    const toasts = [\n      ...state.toasts,\n      toast,\n    ];\n    return {\n      ...state,\n      toasts,\n    };\n  },\n  [hideToast]: (state, { payload }) => {\n    const { id } = payload;\n    const toasts = state.toasts.filter(toast => toast.id !== id);\n    return {\n      ...state,\n      toasts,\n    };\n  },\n}, defaultState);\n"],"mappings":"AAAA,SAASA,cAAc,EAAEC,YAAY,EAAEC,aAAa,QAAQ,eAAe;AAC3E,OAAOC,IAAI,MAAM,MAAM;AAEvB,MAAMC,MAAM,GAAG,OAAO;AAEtB,MAAMC,gBAAgB,GAAGJ,YAAY,CAAC,GAAGG,MAAM,qBAAqB,EAAEE,OAAO,KAAK;EAAEC,IAAI,EAAE,SAAS;EAAED;AAAQ,CAAC,CAAC,CAAC;AAChH,MAAME,cAAc,GAAGP,YAAY,CAAC,GAAGG,MAAM,mBAAmB,EAAEE,OAAO,KAAK;EAAEC,IAAI,EAAE,OAAO;EAAED;AAAQ,CAAC,CAAC,CAAC;AAC1G,MAAMG,SAAS,GAAGR,YAAY,CAAC,GAAGG,MAAM,aAAa,EAAEM,EAAE,KAAK;EAAEA;AAAG,CAAC,CAAC,CAAC;AAEtE,OAAO,MAAMC,OAAO,GAAG;EACrBN,gBAAgB;EAChBG,cAAc;EACdC;AACF,CAAC;AAED,MAAMG,YAAY,GAAG;EACnBC,MAAM,EAAE;AACV,CAAC;AAED,eAAeX,aAAa,CAAC;EAC3B,CAACF,cAAc,CACbK,gBAAgB,EAChBG,cACF,CAAC,GAAG,CAACM,KAAK,EAAE;IAAEC;EAAQ,CAAC,KAAK;IAC1B,MAAML,EAAE,GAAGP,IAAI,CAACa,EAAE,CAAC,CAAC;IACpB,MAAMC,KAAK,GAAG;MACZP,EAAE;MACF,GAAGK;IACL,CAAC;IACD,MAAMF,MAAM,GAAG,CACb,GAAGC,KAAK,CAACD,MAAM,EACfI,KAAK,CACN;IACD,OAAO;MACL,GAAGH,KAAK;MACRD;IACF,CAAC;EACH,CAAC;EACD,CAACJ,SAAS,GAAG,CAACK,KAAK,EAAE;IAAEC;EAAQ,CAAC,KAAK;IACnC,MAAM;MAAEL;IAAG,CAAC,GAAGK,OAAO;IACtB,MAAMF,MAAM,GAAGC,KAAK,CAACD,MAAM,CAACK,MAAM,CAACD,KAAK,IAAIA,KAAK,CAACP,EAAE,KAAKA,EAAE,CAAC;IAC5D,OAAO;MACL,GAAGI,KAAK;MACRD;IACF,CAAC;EACH;AACF,CAAC,EAAED,YAAY,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module"}